<?xml version="1.0"?>
<project name="bookmarker" default="standalone" basedir=".">
	
	<!-- Load in external (user-configurable) properties -->
	<property file="build.properties"/>
	
	<!-- Project directories -->
	<property name="context.dir" value="context"/>
	<property name="db.dir" value="db"/>
	<property name="lib.dir" value="lib"/>
	<property name="lib-standalone.dir" value="lib-standalone"/>
	<property name="src.dir" value="src"/>
	<property name="cayenne.dir" value="${src.dir}/net/negativetwenty/bookmarker/models"/>
	<property name="image.dir" value="images"/>
	
	<!-- Temporary build directories -->
	<property name="build.dir" value="build"/>
	<property name="build.classes" location="${build.dir}/classes"/>
	<property name="standalone.dir" value="${build.dir}/standalone"/>
	
	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>
	
	<!-- 3rd party tasks -->
	<taskdef name="cdbgen" classname="org.objectstyle.cayenne.tools.DbGeneratorTask">
	     <classpath refid="classpath"/>
	</taskdef>
	
	<taskdef name="cgen" classname="org.objectstyle.cayenne.tools.CayenneGenerator">
	     <classpath refid="classpath"/>
	</taskdef>
	
	<taskdef name="collectpages" classname="org.mb.collectpages.Task">
		<classpath refid="classpath"/>
	</taskdef>
	
	
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib-standalone.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<target name="init">
		<mkdir dir="${db.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<touch file="${context.dir}/bookmarks.rdf"/>
	
		<cgen map="${context.dir}/WEB-INF/DefaultMap.map.xml" destDir="${src.dir}" superpkg="net.negativetwenty.bookmarker.models.auto"/>
		
		<cdbgen map="${context.dir}/WEB-INF/DefaultMap.map.xml" adapter="org.objectstyle.cayenne.dba.hsqldb.HSQLDBAdapter"
			driver="org.hsqldb.jdbcDriver" url="jdbc:hsqldb:hsql://localhost/bookmarker" username="sa" password=""
			startHsqldb="true" hsqldbProps="database.0=file:${db.dir}/bookmarker;dbname.0=bookmarker"/>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete file="${context.dir}/bookmarks.rdf"/>
	</target>
	
	<target name="collect">
		<collectpages application="${context.dir}/WEB-INF/bookmarker.application" updateExisting="yes" removeMissing="yes">
			<fileset dir="${context.dir}"/>
		</collectpages>
	</target>
	
	<target name="compile" depends="clean,init,collect">
		<javac srcdir="${src.dir}" destdir="${build.classes}" classpathref="classpath" debug="true"/>
		<copy todir="${build.classes}" file="${context.dir}/WEB-INF/log4j.properties"/>
		<war destfile="${build.dir}/bookmarker.war" webxml="${context.dir}/WEB-INF/web.xml">
			<fileset dir="${context.dir}">
				<exclude name="**/WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${build.classes}" excludes="**/Main*.class,**/SysTray*.class"/>
			<lib dir="${lib.dir}" excludes="collectpages.jar"/>
		</war>
	</target>
	
	<target name="deploy" depends="compile,standalone">
		<copy todir="${tomcat.dir}/webapps" file="${build.dir}/bookmarker.war"/>
	</target>
	
	<!-- Build the app for "standalone" mode. -->
	<target name="standalone" depends="compile">
		
		<!-- Create the standalone app's directory structure. -->
		<mkdir dir="${standalone.dir}"/>
		<mkdir dir="${standalone.dir}/${standalone-db.dir}"/>
		<mkdir dir="${standalone.dir}/lib"/>
		<mkdir dir="${standalone.dir}/bookmarker"/>
		<mkdir dir="${standalone.dir}/images"/>
		
		<!-- Get all the libs the standalone app requires. -->
		<copy todir="${standalone.dir}/${standalone-db.dir}">
			<fileset dir="${db.dir}"/>
		</copy>
		
		<copy todir="${standalone.dir}/lib">
			<fileset dir="${lib-standalone.dir}"/>
		</copy>
		
		<unjar dest="${standalone.dir}/bookmarker/" src="${build.dir}/bookmarker.war"/>
		
		<copy todir="${standalone.dir}/images">
			<fileset dir="${image.dir}"/>
		</copy>
		
		<!-- Build the main jar file. -->
		<jar destfile="${standalone.dir}/bookmarker.jar">
			<fileset dir="${build.classes}">
				<include name="**/Main*.class"/>
				<include name="**/SysTray*.class"/>
			</fileset>
			<manifest>
				<attribute name="Class-Path" value="lib/org.mortbay.jetty.jar lib/javax.servlet.jar lib/jasper-compiler.jar lib/jasper-runtime.jar lib/jdic.jar"/>
				<attribute name="Main-Class" value="net.negativetwenty.bookmarker.Main" />
			</manifest>
		</jar>
	</target>
</project>
